[tool.poetry]
name = "joystick_diagrams"
description = ""
authors = ["Robert Cox"]
version = "2.0"
homepage = "https://www.joystick-diagrams.com"
readme = "readme.md"
repository = "https://github.com/Rexeh/joystick-diagrams"

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
ply = "^3.11"
requests = "^2.31.0"
qt-material = "^2.14"
dynaconf = "^3.2.4"
pyside6 = "^6.6.1"

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
pytest-qt = "^4.2.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
pre-commit = "^2.15.0"
coveralls = "^3.3.0"
pylint = "^3.0.0"
cx-Freeze = "^6.15.0"
mypy = "^1.7.1"
isort = "^5.12.0"

[tool.poetry.group.dev.dependencies]
pyuic5-tool = "^0.0.1"

[tool.poetry.scripts]
version_package = 'joystick_diagrams.version:generate_version'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "Joystick_Diagrams"
description = "Automatically create diagrams for your throttles, joysticks and custom HID devices"
dynamic = ["version", "readme"]

[tool.setuptools.dynamic]
version = {attr = "joystick_diagrams.classes.version.version.VERSION"}
readme =  {file = "readme.md"}

[tool.setuptools.packages.find]
where = ["joystick_diagrams"]
namespaces = false

[tool.distutils.build_exe]
includes = ["joystick_diagrams.plugins","joystick_diagrams.plugins.plugin1"]
packages = ["joystick_diagrams.plugins","joystick_diagrams.plugins.plugin1"]
include_files =  ["./images", "./templates", "./config.cfg", "./readme.md", "version_manifest.json"]
excludes  = ["tkinter", "test", "distutils", "asyncio", "concurrent", "pyqt5"]
optimize = 2

[tool.coverage.paths]
source = ["joystick_diagrams/"]

[tool.coverage.run]
omit = [".*", "*/site-packages/*", "*/config.py", "*/plugins/*", "*/devices/*"]

[tool.coverage.report]
fail_under = 80
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    'if __name__ == "__main__":']

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
            # the root of the project
)
'''

[tool.mypy]
warn_return_any = false
warn_unused_configs = true
warn_annotation_unchecked = false
show_error_codes = true

[tool.mypy.overrides]
module = [
    "dynaconf.*",
    "qt_material.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
    "uitest",
]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["A","E","C90","I","W","F","B","Q","N","PL"]

ignore = ["E501"]

unfixable = ["B"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
quote-style = "single"